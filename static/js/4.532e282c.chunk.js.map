{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","pages/Halidom/CheckboxGroup.jsx","pages/Halidom/HalidomList.jsx","pages/Halidom/Setting.jsx","pages/Halidom/Halidom.jsx","pages/Halidom/index.js"],"names":["FormControlLabel","forwardRef","props","ref","checked","classes","classNameProp","className","control","disabledProp","disabled","label","inputRef","_props$labelPlacement","labelPlacement","other","name","onChange","value","muiFormControl","controlProps","forEach","key","createElement","root","concat","cloneElement","component","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","color","palette","text","_props$edge","edge","children","_props$color","_props$disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","ButtonBase","small","start","edgeStart","end","edgeEnd","centerRipple","focusRipple","withStyles","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","action","active","transition","transitions","create","duration","shortest","backgroundColor","hoverOpacity","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","justifyContent","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","onBlur","onFocus","readOnly","required","tabIndex","type","isControlled","useRef","current","_React$useState","useState","Boolean","checkedState","setCheckedState","useFormControl","hasLabelFor","role","undefined","event","input","target","position","opacity","height","top","left","margin","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$row","row","flexWrap","CheckboxGroup","fieldset","checkAll","checkboxes","handleParent","useEventCallback","e","newCheckboxes","map","item","handleChild","all","Checkbox","defaultProps","React","memo","itemKey","columnIndex","rowIndex","data","cols","keyArray","HalidomList","elements","weapons","windowWidth","useContext","Context","filters","HALIDOM_LIST","filter","some","f","includes","rows","Math","ceil","length","itemData","columnCount","rowCount","columnWidth","rowHeight","HalidomItem","arr","actionCreators","updateSetting","connect","halidom","collapse","setCollapse","level","useMemo","sum","Number","dracolith","dragontree","smithy","rupie","i","parseInt","handleSetting","cn","clsx","makeCheckboxes","Array","isArray","makeFilters","reduce","loadHalidom","ELEMENTS","setElements","WEAPONS","setWeapons","HALIDOM_TYPES","t","types","setTypes","elementFilters","setElementFilters","weaponFilters","setWeaponFilters","useEffect","j","push","Halidom"],"mappings":"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","file":"static/js/4.532e282c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      classNameProp = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, classNameProp, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * This prop can be used to pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size], {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: you are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      checkedState = _React$useState[0],\n      setCheckedState = _React$useState[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, classNameProp, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), checked ? checkedIcon : icon, React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { useEventCallback } from 'utils';\n\nconst defaultProps = {\n  label: '',\n  checkAll: true,\n  checkboxes: null,\n};\n\nfunction CheckboxGroup({ fieldset, checkAll, checkboxes, onChange }) {\n  const handleParent = useEventCallback(e => {\n    const { checked } = e.target;\n    const newCheckboxes = checkboxes.map(item => ({ ...item, checked }));\n    onChange({ checkAll: checked, checkboxes: newCheckboxes });\n  });\n\n  const handleChild = useEventCallback(e => {\n    const { name, checked } = e.target;\n    let all = true;\n    const newCheckboxes = checkboxes.map(item => {\n      if (item.label === name) {\n        if (all && !checked) all = false;\n        return { ...item, checked };\n      }\n\n      if (all && !item.checked) all = false;\n      return item;\n    });\n\n    onChange({ checkAll: all, checkboxes: newCheckboxes });\n  });\n\n  return (\n    <div className=\"checkbox-group\">\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checkAll}\n            color=\"primary\"\n            onChange={handleParent}\n          />\n        }\n        label={fieldset}\n      />\n\n      <FormGroup>\n        {checkboxes &&\n          checkboxes.map(item => (\n            <FormControlLabel\n              key={item.label}\n              control={\n                <Checkbox\n                  name={item.label}\n                  checked={item.checked}\n                  color=\"primary\"\n                  onChange={handleChild}\n                />\n              }\n              label={item.label}\n            />\n          ))}\n      </FormGroup>\n    </div>\n  );\n}\n\nCheckboxGroup.defaultProps = defaultProps;\n\nexport default React.memo(CheckboxGroup);\n","import React from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeGrid } from 'react-window';\nimport { Context, HalidomItem } from 'components';\nimport { HALIDOM_LIST } from 'data';\n\nfunction itemKey({ columnIndex, rowIndex, data: { cols, keyArray } }) {\n  return (\n    keyArray[cols * rowIndex + columnIndex] || `${rowIndex}_${columnIndex}`\n  );\n}\n\nconst defaultProps = {\n  weapons: [],\n  elements: [],\n};\n\nfunction HalidomList({ elements, weapons }) {\n  const { width: windowWidth } = React.useContext(Context);\n\n  const filters = [...elements, ...weapons];\n  const keyArray = HALIDOM_LIST.filter(item => {\n    return filters.some(f => item.includes(f));\n  });\n\n  const cols = windowWidth > 700 ? 2 : 1;\n\n  const data = { cols, keyArray };\n  const rows = Math.ceil(keyArray.length / cols);\n\n  return (\n    <AutoSizer>\n      {({ height, width }) => (\n        <FixedSizeGrid\n          width={width}\n          height={height}\n          itemData={data}\n          itemKey={itemKey}\n          columnCount={cols}\n          rowCount={rows}\n          columnWidth={width / cols - 8}\n          rowHeight={100}\n        >\n          {HalidomItem}\n        </FixedSizeGrid>\n      )}\n    </AutoSizer>\n  );\n}\n\nHalidomList.defaultProps = defaultProps;\n\nexport default React.memo(HalidomList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { Input, HalidomSetting } from 'components';\nimport { HALIDOM_LIST } from 'data';\nimport { updateSetting } from 'actions';\nimport { useEventCallback } from 'utils';\n\nconst arr = ['smithy', 'dragontree', 'dracolith', 'rupie'];\n\n// eslint-disable-next-line no-shadow\nfunction Setting({ halidom, updateSetting }) {\n  const [collapse, setCollapse] = React.useState(false);\n\n  const level = React.useMemo(() => {\n    let sum =\n      Number(halidom.dracolith) +\n      Number(halidom.dragontree) +\n      Number(halidom.smithy) +\n      Number(halidom.rupie);\n\n    for (let i = 0; i < HALIDOM_LIST.length; i += 1) {\n      const key = HALIDOM_LIST[i];\n      sum += halidom[key].level;\n    }\n    return sum;\n  }, [halidom]);\n\n  const onChange = useEventCallback(e => {\n    const { name, value } = e.target;\n    updateSetting({ name, value: parseInt(value, 10) || '' });\n  });\n\n  const handleSetting = useEventCallback(e => {\n    setCollapse(e.target.checked);\n  });\n\n  const cn = clsx('col-2', 'animated-collapse', { collapse: !collapse });\n\n  return (\n    <>\n      <HalidomSetting />\n\n      <div className=\"col-2\">\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={collapse}\n              color=\"primary\"\n              onChange={handleSetting}\n            />\n          }\n          label=\"Setting\"\n        />\n        <div className=\"center\">Total : {level}</div>\n      </div>\n\n      <div className={cn}>\n        {arr.map(key => {\n          return (\n            <Input\n              key={key}\n              label={key}\n              value={halidom[key]}\n              onChange={onChange}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = ({ halidom }) => {\n  return { halidom };\n};\n\nconst actionCreators = { updateSetting };\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(Setting);\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { ELEMENTS, WEAPONS, HALIDOM_TYPES } from 'data';\nimport { loadHalidom } from 'actions';\nimport CheckboxGroup from './CheckboxGroup';\nimport HalidomList from './HalidomList';\nimport Setting from './Setting';\n\nconst makeCheckboxes = arr => {\n  if (!arr || !Array.isArray(arr)) return null;\n\n  return arr.map(item => ({ checked: true, label: item }));\n};\n\nconst makeFilters = ({ checkboxes }) => {\n  if (!checkboxes || !Array.isArray(checkboxes)) return [];\n\n  return checkboxes.reduce(\n    (arr, item) => (item.checked ? [...arr, item.label] : arr),\n    []\n  );\n};\n\n// eslint-disable-next-line no-shadow\nfunction Halidom({ halidom }) {\n  const [elements, setElements] = useState(() => ({\n    checkAll: true,\n    checkboxes: makeCheckboxes(ELEMENTS),\n  }));\n\n  const [weapons, setWeapons] = useState(() => ({\n    checkAll: true,\n    checkboxes: makeCheckboxes(WEAPONS),\n  }));\n\n  const [types, setTypes] = useState(() => ({\n    checkAll: true,\n    checkboxes: makeCheckboxes(HALIDOM_TYPES.filter(t => t !== 'dojo')),\n  }));\n\n  const [elementFilters, setElementFilters] = useState([]);\n  const [weaponFilters, setWeaponFilters] = useState([]);\n\n  useEffect(() => {\n    let filters = [];\n    if (elements.checkAll) {\n      filters = makeFilters(types);\n    } else if (types.checkAll) {\n      filters = makeFilters(elements);\n    } else {\n      const e = elements.checkboxes;\n      const t = types.checkboxes;\n      for (let i = 0; i < e.length; i += 1) {\n        for (let j = 0; j < t.length; j += 1) {\n          if (e[i].checked && t[j].checked) {\n            filters.push(`${e[i].label}_${t[j].label}`);\n          }\n        }\n      }\n    }\n\n    setElementFilters(filters);\n  }, [elements, types]);\n\n  useEffect(() => {\n    let filters = [];\n    if (weapons.checkAll) {\n      filters = WEAPONS;\n    } else {\n      filters = makeFilters(weapons);\n    }\n    setWeaponFilters(filters);\n  }, [weapons]);\n\n  return (\n    <main id=\"halidom\">\n      <div>\n        <Setting />\n        <div className=\"col-3\">\n          <CheckboxGroup\n            checkAll={elements.checkAll}\n            checkboxes={elements.checkboxes}\n            fieldset=\"Elements\"\n            onChange={setElements}\n          />\n\n          <CheckboxGroup\n            checkAll={types.checkAll}\n            checkboxes={types.checkboxes}\n            fieldset=\"Types\"\n            onChange={setTypes}\n          />\n\n          <CheckboxGroup\n            checkAll={weapons.checkAll}\n            checkboxes={weapons.checkboxes}\n            fieldset=\"Weapons\"\n            onChange={setWeapons}\n          />\n        </div>\n      </div>\n      <div>\n        <HalidomList elements={elementFilters} weapons={weaponFilters} />\n      </div>\n    </main>\n  );\n}\n\nconst mapStateToProps = ({ halidom }) => {\n  return { halidom };\n};\n\nconst actionCreators = {\n  loadHalidom,\n};\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(Halidom);\n","import Halidom from './Halidom';\n\nexport default Halidom;\n"],"sourceRoot":""}