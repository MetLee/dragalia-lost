{"version":3,"sources":["pages/Facility/Slider.jsx","pages/Facility/FacilityItem.jsx","pages/Facility/MaterialItem.jsx","pages/Facility/Facility.jsx","pages/Facility/index.js"],"names":["asc","a","b","findClosest","values","currentValue","reduce","acc","value","index","distance","Math","abs","getPos","event","touchId","undefined","current","changedTouches","i","length","touch","identifier","clientX","trimValue","min","max","pctToValue","pct","round","valueToPos","width","setValue","v","ret","Slider","defaultValue","valueProp","onChange","sliderRef","useRef","useState","left","dimension","setDimension","handleWidth","useEventCallback","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","isControlled","React","valueState","setValueState","valueDerived","range","Array","isArray","sort","map","prevIndex","getNewValue","useCallback","pos","move","newValue","indexOf","handleTouchMove","handleTouchEnd","document","body","handleMouseEnter","buttons","relatedTarget","handleTouchStart","preventDefault","slider","handleMouseDown","trackStyle","ref","className","onMouseDown","style","key","role","tabIndex","aria-valuemax","aria-valuemin","aria-valuenow","defaultProps","memo","FacilityItem","item","setFacility","useMemo","getLimit","type","field","image","id","onClick","prev","filter","_","f","columnIndex","rowIndex","data","dict","arr","qty","btns","getKey","keyDict","sumArray","sum","start","end","open","setOpen","loadState","facility","e","currentTarget","name","removeState","backup","saveState","onCreate","needs","forEach","Object","entries","material","itemArr","keys","refs","col3","height","itemData","columnCount","columnWidth","rowCount","rowHeight","MaterialItem","Facility"],"mappings":"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","file":"static/js/6.9ca0dd0a.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useEventCallback } from 'utils';\n\nconst asc = (a, b) => a - b;\n\nfunction findClosest(values, currentValue) {\n  const { index: closestIndex } = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index,\n      };\n    }\n\n    return acc;\n  }, null);\n  return closestIndex;\n}\n\nconst getPos = (event, touchId) => {\n  if (touchId.current !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === touchId.current) {\n        return touch.clientX;\n      }\n    }\n\n    return null;\n  }\n\n  return event.clientX;\n};\n\nconst trimValue = (value, min, max) => {\n  if (value < min) return min;\n  if (value > max) return max;\n\n  return value;\n};\n\nconst pctToValue = (pct, min, max) => {\n  let value = (max - min) * pct + min;\n  value = trimValue(value, min, max);\n  return Math.round(value);\n};\n\nconst valueToPos = (value, min, max, width) => {\n  return ((value - min) * width) / (max - min);\n};\n\nconst setValue = ({ i, v, values }) => {\n  const ret = [...values];\n  ret[i] = v;\n  return ret;\n};\n\nconst defaultProps = {\n  defaultValue: null,\n  min: 0,\n};\n\nfunction Slider({ defaultValue, value: valueProp, min, max, onChange }) {\n  const sliderRef = useRef();\n  const [dimension, setDimension] = useState({\n    left: 0,\n    width: 0,\n  });\n\n  const handleWidth = useEventCallback(() => {\n    if (sliderRef.current) {\n      const { left, width } = sliderRef.current.getBoundingClientRect();\n      setDimension({ left, width: width - 32 });\n    }\n  });\n\n  useEffect(() => {\n    handleWidth();\n  }, [handleWidth]);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWidth);\n    return () => window.removeEventListener('resize', handleWidth);\n  }, [handleWidth]);\n\n  const { current: isControlled } = useRef(valueProp != null);\n  const touchId = React.useRef();\n\n  const [valueState, setValueState] = useState(defaultValue || [min, max]);\n\n  const valueDerived = isControlled ? valueProp : valueState;\n  const range = Array.isArray(valueDerived);\n  let values = range ? [...valueDerived].sort(asc) : [valueDerived];\n  values = values.map(v => trimValue(v, min, max));\n\n  const prevIndex = React.useRef();\n\n  const getNewValue = React.useCallback(\n    (pos, move = false) => {\n      const { left, width } = dimension;\n      const pct = (pos - left) / width;\n      const v = pctToValue(pct, min, max);\n      const i = move ? prevIndex.current : findClosest(values, v);\n      const newValue = setValue({ i, v, values }).sort(asc);\n      prevIndex.current = newValue.indexOf(v);\n\n      return newValue;\n    },\n    [values, min, max, dimension]\n  );\n\n  const handleTouchMove = useEventCallback(event => {\n    const pos = getPos(event, touchId);\n\n    if (!pos) return;\n    const newValue = getNewValue(pos, true);\n\n    if (!isControlled) {\n      setValueState(newValue);\n    }\n\n    if (onChange) {\n      onChange(newValue);\n    }\n  });\n\n  const handleTouchEnd = useEventCallback(event => {\n    const pos = getPos(event, touchId);\n    if (!pos) return;\n\n    touchId.current = undefined;\n    document.body.removeEventListener('mousemove', handleTouchMove);\n    document.body.removeEventListener('mouseup', handleTouchEnd);\n    // eslint-disable-next-line no-use-before-define\n    document.body.removeEventListener('mouseenter', handleMouseEnter);\n    document.body.removeEventListener('touchmove', handleTouchMove);\n    document.body.removeEventListener('touchend', handleTouchEnd);\n  });\n\n  const handleMouseEnter = useEventCallback(event => {\n    // If the slider was being interacted with but the mouse went off the window\n    // and then re-entered while unclicked then end the interaction.\n    if (event.buttons === 0 && event.relatedTarget !== null) {\n      handleTouchEnd(event);\n    }\n  });\n\n  const handleTouchStart = useEventCallback(event => {\n    // Workaround as Safari has partial support for touchAction: 'none'.\n    event.preventDefault();\n    const touch = event.changedTouches[0];\n    if (touch != null) touchId.current = touch.identifier;\n\n    const pos = getPos(event, touchId);\n    const newValue = getNewValue(pos);\n\n    if (!isControlled) {\n      setValueState(newValue);\n    }\n\n    if (onChange) {\n      onChange(newValue);\n    }\n\n    document.body.addEventListener('touchmove', handleTouchMove);\n    document.body.addEventListener('touchend', handleTouchEnd);\n  });\n\n  useEffect(() => {\n    const { current: slider } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart);\n\n    return () => {\n      slider.removeEventListener('touchstart', handleTouchStart);\n      document.body.removeEventListener('mousemove', handleTouchMove);\n      document.body.removeEventListener('mouseup', handleTouchEnd);\n      document.body.removeEventListener('mouseenter', handleMouseEnter);\n      document.body.removeEventListener('touchmove', handleTouchMove);\n      document.body.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [handleMouseEnter, handleTouchEnd, handleTouchMove, handleTouchStart]);\n\n  const handleMouseDown = useEventCallback(event => {\n    event.preventDefault();\n    const pos = getPos(event, touchId);\n    const newValue = getNewValue(pos);\n\n    if (!isControlled) {\n      setValueState(newValue);\n    }\n    if (onChange) {\n      onChange(newValue);\n    }\n\n    document.body.addEventListener('mousemove', handleTouchMove);\n    document.body.addEventListener('mouseenter', handleMouseEnter);\n    document.body.addEventListener('mouseup', handleTouchEnd);\n  });\n\n  const left = valueToPos(range ? values[0] : min, min, max, dimension.width);\n  const width =\n    valueToPos(values[values.length - 1], min, max, dimension.width) - left;\n\n  const trackStyle = { left, width };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div ref={sliderRef} className=\"slider\" onMouseDown={handleMouseDown}>\n      <span className=\"slider-rail\" />\n      <span className=\"slider-track\" style={trackStyle} />\n      {values.map((v, i) => {\n        const style = { left: valueToPos(v, min, max, dimension.width) };\n        return (\n          <div\n            // eslint-disable-next-line react/no-array-index-key\n            key={i}\n            className=\"slider-thumb\"\n            style={style}\n            role=\"slider\"\n            tabIndex=\"0\"\n            aria-valuemax={max}\n            aria-valuemin={min}\n            aria-valuenow={v}\n          >\n            {v}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nSlider.defaultProps = defaultProps;\n\nexport default React.memo(Slider);\n","import React from 'react';\nimport { Image } from 'components';\nimport { getLimit } from 'utils';\nimport Slider from './Slider';\n\nfunction FacilityItem({ index, item, setFacility }) {\n  const max = React.useMemo(() => getLimit(item.type), [item.type]);\n  const removeItem = () => {\n    setFacility(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const onChange = value => {\n    setFacility(prev =>\n      prev.map((f, i) => {\n        return i === index ? { ...f, value } : f;\n      })\n    );\n  };\n\n  return (\n    <div className=\"facility-item\">\n      <Image field=\"facility\" image={item.id} onClick={removeItem} />\n      <Slider max={max} value={item.value} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default FacilityItem;\n","import React from 'react';\nimport { Image } from 'components';\n\nfunction MaterialItem({ columnIndex, rowIndex, style, data: { dict, arr } }) {\n  const key = arr[2 * rowIndex + columnIndex];\n  const qty = dict[key];\n  return (\n    <>\n      {qty && (\n        <div style={style} className=\"material-item\">\n          <Image field=\"material\" image={key} />\n          <div>{qty}</div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(MaterialItem);\n","import React, { useState } from 'react';\nimport { FixedSizeGrid } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { IconBtns, Dialog } from 'components';\nimport {\n  refs,\n  getLimit,\n  loadState,\n  removeState,\n  saveState,\n  useEventCallback,\n} from 'utils';\nimport { material, keyDict } from 'data';\nimport FacilityItem from './FacilityItem';\nimport MaterialItem from './MaterialItem';\n\nconst btns = ['del', 'refresh', 'save', 'add'];\n\nconst getKey = (type, field) => {\n  switch (type) {\n    case 'rupies':\n    case 'event':\n    case 'item':\n    case 'coin1':\n    case 'coin2':\n    case 'coin3':\n    case 'talonstone':\n      return keyDict[type];\n    default:\n      return keyDict[type][field];\n  }\n};\n\nconst sumArray = (arr, value) => {\n  let sum = 0;\n  const [start, end] = value;\n  for (let i = start; i < end; i += 1) {\n    sum += arr[i];\n  }\n\n  return sum;\n};\n\nfunction Facility() {\n  const [open, setOpen] = useState(false);\n  const [facility, setFacility] = useState(loadState('facility') || []);\n\n  const onClick = useEventCallback(e => {\n    switch (e.currentTarget.name) {\n      case 'add':\n        setOpen(true);\n        break;\n      case 'del': {\n        setFacility([]);\n        removeState('facility');\n        break;\n      }\n      case 'refresh': {\n        const backup = loadState('facility');\n        if (backup) {\n          setFacility(backup);\n        }\n        break;\n      }\n      case 'save':\n        saveState('facility', facility);\n        break;\n      default:\n        break;\n    }\n  });\n\n  const onCreate = useEventCallback(({ type, field }) => {\n    const id = type === 'event' ? 'event' : keyDict[type][field];\n    const max = getLimit(type);\n    setFacility(prev => [...prev, { id, type, field, value: [0, max] }]);\n  });\n\n  const needs = React.useMemo(() => {\n    const dict = {};\n    facility.forEach(f => {\n      if (f.value[0] !== f.value[1]) {\n        Object.entries(material[f.type]).forEach(([item, itemArr]) => {\n          const qty = sumArray(itemArr, f.value);\n          if (qty !== 0) {\n            const key = getKey(item, f.field);\n            dict[key] = (dict[key] || 0) + qty;\n          }\n        });\n      }\n    });\n    return { dict, arr: Object.keys(dict) };\n  }, [facility]);\n\n  return (\n    <main id=\"facility\">\n      <div>\n        <IconBtns btns={btns} onClick={onClick} />\n        <div>\n          {facility.map((f, i) => {\n            return (\n              <FacilityItem\n                // eslint-disable-next-line react/no-array-index-key\n                key={i}\n                index={i}\n                item={f}\n                setFacility={setFacility}\n              />\n            );\n          })}\n        </div>\n        <Dialog open={open} setOpen={setOpen} onCreate={onCreate} />\n      </div>\n\n      <div ref={refs.col3}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <FixedSizeGrid\n              width={width}\n              height={height}\n              itemData={needs}\n              columnCount={2}\n              columnWidth={width / 2 - 8}\n              rowCount={needs.arr.length}\n              rowHeight={64}\n            >\n              {MaterialItem}\n            </FixedSizeGrid>\n          )}\n        </AutoSizer>\n      </div>\n    </main>\n  );\n}\n\nexport default React.memo(Facility);\n","import Facility from './Facility';\n\nexport default Facility;\n"],"sourceRoot":""}